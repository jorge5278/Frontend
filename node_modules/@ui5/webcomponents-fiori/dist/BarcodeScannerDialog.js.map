{"version":3,"file":"BarcodeScannerDialog.js","sourceRoot":"","sources":["../src/BarcodeScannerDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport jsxRenderer from \"@ui5/webcomponents-base/dist/renderer/JsxRenderer.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type Dialog from \"@ui5/webcomponents/dist/Dialog.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event-strict.js\";\nimport i18n from \"@ui5/webcomponents-base/dist/decorators/i18n.js\";\nimport type { Result, Exception } from \"@zxing/library\";\nimport type { Interval } from \"@ui5/webcomponents-base/dist/types.js\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport ZXing from \"@ui5/webcomponents-fiori/dist/ssr-zxing.js\";\n\n// Texts\nimport {\n\tBARCODE_SCANNER_DIALOG_CANCEL_BUTTON_TXT,\n\tBARCODE_SCANNER_DIALOG_LOADING_TXT,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport BarcodeScannerDialogTemplate from \"./BarcodeScannerDialogTemplate.js\";\n\n// Styles\nimport BarcodeScannerDialogCss from \"./generated/themes/BarcodeScannerDialog.css.js\";\n\n// some tools handle named exports from UMD files and the window object is not assigned but the imports work (vitejs)\n// other tools do not handle named exports (they are undefined after the import), but the window global is assigned and can be used (web dev server)\nconst windowZXing = typeof window === \"undefined\" ? {} : window.ZXing;\nconst effectiveZXing = { ...ZXing, ...windowZXing };\nconst { BrowserMultiFormatReader, NotFoundException } = effectiveZXing;\n\nconst defaultMediaConstraints = {\n\taudio: false,\n\tvideo: {\n\t\theight: {\n\t\t\tmin: 480,\n\t\t\tideal: 960,\n\t\t\tmax: 1440,\n\t\t},\n\t\taspectRatio: 1.333333333,\n\t\tfacingMode: \"environment\",\n\t},\n};\n\ntype BarcodeScannerDialogScanSuccessEventDetail = {\n\ttext: string,\n\trawBytes: Uint8Array,\n};\n\ntype BarcodeScannerDialogScanErrorEventDetail = {\n\tmessage: string,\n};\n\n/**\n * @class\n *\n * ### Overview\n *\n * The `BarcodeScannerDialog` component provides barcode scanning functionality for all devices that support the `MediaDevices.getUserMedia()` native API.\n * Opening the dialog launches the device camera and scans for known barcode formats.\n *\n * A `scanSuccess` event fires whenever a barcode is identified\n * and a `scanError` event fires when the scan failed (for example, due to missing permisions).\n *\n * Internally, the component  uses the zxing-js/library third party OSS.\n *\n * For a list of supported barcode formats, see the [zxing-js/library](https://github.com/zxing-js/library) documentation.\n * @constructor\n * @extends UI5Element\n * @public\n * @since 1.0.0-rc.15\n */\n@customElement({\n\ttag: \"ui5-barcode-scanner-dialog\",\n\tlanguageAware: true,\n\trenderer: jsxRenderer,\n\ttemplate: BarcodeScannerDialogTemplate,\n\tstyles: [BarcodeScannerDialogCss],\n})\n\n/**\n * Fired when the user closes the component.\n * @since 2.0.0\n * @public\n */\n@event(\"close\", {\n\tbubbles: true,\n})\n\n/**\n * Fires when the scan is completed successfuuly.\n * @param {string} text the scan result as string\n * @param {Object} rawBytes the scan result as a Uint8Array\n * @public\n */\n@event(\"scan-success\", {\n\tbubbles: true,\n})\n\n/**\n * Fires when the scan fails with error.\n * @param {string} message the error message\n * @public\n */\n@event(\"scan-error\", {\n\tbubbles: true,\n})\n\nclass BarcodeScannerDialog extends UI5Element {\n\teventDetails!: {\n\t\tclose: void,\n\t\t\"scan-success\": BarcodeScannerDialogScanSuccessEventDetail,\n\t\t\"scan-error\": BarcodeScannerDialogScanErrorEventDetail,\n\t}\n\t/**\n\t * Defines the header HTML Element.\n\t *\n\t * **Note:** If `header` slot is provided, the labelling of the dialog is a responsibility of the application developer.\n\t * `accessibleName` should be used.\n\t *\n\t * @public\n\t * @since 2.4.0\n\t */\n\t@slot()\n\theader!: Array<HTMLElement>;\n\n\t/**\n\t * Defines the footer HTML Element.\n\t *\n\t * **Note:** When you provide custom content for the `footer` slot, the default close button is not rendered.\n\t * This means you need to include your own mechanism within the custom `footer` to close the dialog,\n\t * such as a button with an event listener that closes the dialog.\n\t *\n\t * **Note:** If the `footer` slot is not provided, a default footer with a close button is rendered automatically,\n\t * allowing users to close the dialog without any additional implementation.\n\t *\n\t * @public\n\t * @since 2.4.0\n\t */\n\t@slot()\n\tfooter!: Array<HTMLElement>;\n\n\t/**\n\t * Indicates whether the dialog is open.\n\t *\n\t * @public\n\t * @default false\n\t * @since 1.24.0\n\t */\n\t@property({ type: Boolean })\n\topen = false;\n\n\t/**\n\t * Indicates whether a loading indicator should be displayed while the scanner is loading.\n\t * @default false\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\tloading = false;\n\n\t/**\n\t * Indicates whether the scanner is ready to scan.\n\t * @default false\n\t * @private\n\t */\n\t@property({ type: Boolean, noAttribute: true })\n\tisReadyToScan = false;\n\n\tdialog?: Dialog;\n\n\t@i18n(\"@ui5/webcomponents-fiori\")\n\tstatic i18nBundle: I18nBundle;\n\t_codeReader: InstanceType<typeof BrowserMultiFormatReader>;\n\t_tempCanvas!: HTMLCanvasElement;\n\t_scanInterval!: Interval | null;\n\t_handleVideoPlayingBound: () => void;\n\t_handleCaptureRegionBound: () => void;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._codeReader = new BrowserMultiFormatReader();\n\t\tthis._handleVideoPlayingBound = this._handleVideoPlaying.bind(this);\n\t\tthis._handleCaptureRegionBound = this._handleDrawCaptureRegion.bind(this);\n\t}\n\n\tasync onAfterRendering() {\n\t\tif (!this._hasGetUserMedia()) {\n\t\t\tthis.fireDecoratorEvent(\"scan-error\", { message: \"getUserMedia() is not supported by your browser\" });\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.open || this.loading) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.isReadyToScan) {\n\t\t\tthis.loading = true;\n\t\t}\n\n\t\tconst video = this._getVideoElement();\n\t\tif (video.srcObject) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst stream = await this._getUserPermission();\n\t\t\tvideo.addEventListener(\"loadeddata\", this._handleVideoPlayingBound);\n\t\t\tvideo.srcObject = stream;\n\t\t} catch (error) {\n\t\t\tthis.fireDecoratorEvent(\"scan-error\", { message: (error as Error).message });\n\t\t\tthis.loading = false;\n\t\t}\n\t}\n\n\tonEnterDOM() {\n\t\tsuper.onEnterDOM();\n\t\twindow.addEventListener(\"resize\", this._handleCaptureRegionBound);\n\t}\n\n\tonExitDOM() {\n\t\tsuper.onExitDOM();\n\t\twindow.removeEventListener(\"resize\", this._handleCaptureRegionBound);\n\t}\n\n\tget _open() {\n\t\treturn this.open && this.isReadyToScan;\n\t}\n\n\tget _cancelButtonText() {\n\t\treturn BarcodeScannerDialog.i18nBundle.getText(BARCODE_SCANNER_DIALOG_CANCEL_BUTTON_TXT);\n\t}\n\n\tget _busyIndicatorText() {\n\t\treturn BarcodeScannerDialog.i18nBundle.getText(BARCODE_SCANNER_DIALOG_LOADING_TXT);\n\t}\n\n\t_hasGetUserMedia() {\n\t\treturn !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n\t}\n\n\t_getUserPermission() {\n\t\treturn navigator.mediaDevices.getUserMedia(defaultMediaConstraints);\n\t}\n\n\t_getVideoElement() {\n\t\treturn this.shadowRoot!.querySelector<HTMLVideoElement>(\".ui5-barcode-scanner-dialog-video\")!;\n\t}\n\n\t_getOverlayCanvasElement() {\n\t\treturn this.shadowRoot!.querySelector<HTMLCanvasElement>(\".ui5-barcode-scanner-dialog-overlay\")!;\n\t}\n\n\t/**\n\t * CALCULATIONS\n\t *\n\t * The following methods are used to calculate the capture region\n\t * and draw it on the overlay canvas.\n\t * The capture region is a square area in the center of the video element\n\t * where the barcode scanning is performed.\n\t * The region is defined as a proportion of the video element's dimensions.\n\t * The overlay canvas is used to draw a semi-transparent black overlay\n\t * over the video element and a red border around the capture region.\n\t * The overlay canvas is updated on every frame to ensure the capture region is always visible.\n\t * The capture region is used to crop the video frame and extract the barcode image.\n\t * The extracted image is then processed by the zxing-js library to decode the barcode.\n\t */\n\n\t_calculateCaptureRegion(clientWidth: number, clientHeight: number) {\n\t\t// Define the maximum scan size as a proportion of the video element\n\t\tconst maxScanProportion = 0.66666667; // 2:3\n\t\t// Calculate maximum square dimension based on video dimensions and max proportion\n\t\tconst maxScanDimension = Math.min(clientWidth, clientHeight) * maxScanProportion;\n\t\t// Calculate offset to center the square scan region\n\t\tconst xOffset = (clientWidth - maxScanDimension) / 2;\n\t\tconst yOffset = (clientHeight - maxScanDimension) / 2;\n\t\t// Calculate the width and height of the scan region\n\t\tconst scanWidth = Math.floor(maxScanDimension);\n\t\tconst scanHeight = Math.floor(maxScanDimension);\n\n\t\treturn {\n\t\t\tscanHeight,\n\t\t\tscanWidth,\n\t\t\txOffset,\n\t\t\tyOffset,\n\t\t};\n\t}\n\n\t_drawCaptureRegion() {\n\t\tconst videoElement = this._getVideoElement();\n\t\tconst canvasElement = this._getOverlayCanvasElement();\n\t\tconst context = canvasElement.getContext(\"2d\")!;\n\n\t\tconst videoClientWidth = videoElement.clientWidth;\n\t\tconst videoClientHeight = videoElement.clientHeight;\n\n\t\t// Set canvas dimensions to match the video element's dimensions\n\t\tcanvasElement.width = videoClientWidth;\n\t\tcanvasElement.height = videoClientHeight;\n\n\t\t// Clear the canvas\n\t\tcontext.clearRect(0, 0, videoClientWidth, videoClientHeight);\n\t\t// Calculate the capture region\n\t\tconst captureRegion = this._calculateCaptureRegion(videoClientWidth, videoClientHeight);\n\n\t\t// Draw a semi-transparent black overlay over the video\n\t\tcontext.fillStyle = \"rgba(0, 0, 0, 0.5)\";\n\t\tcontext.fillRect(0, 0, videoClientWidth, videoClientHeight);\n\t\tcontext.clearRect(captureRegion.xOffset, captureRegion.yOffset, captureRegion.scanWidth, captureRegion.scanHeight);\n\n\t\t// Draw red border around the capture region\n\t\tcontext.strokeStyle = \"red\";\n\t\tcontext.lineWidth = 1;\n\t\tcontext.strokeRect(captureRegion.xOffset, captureRegion.yOffset, captureRegion.scanWidth, captureRegion.scanHeight);\n\n\t\t// Display the overlay\n\t\tcanvasElement.style.display = \"block\";\n\t}\n\n\t_getTempCanvasElement() {\n\t\tif (!this._tempCanvas) {\n\t\t\tthis._tempCanvas = document.createElement(\"canvas\");\n\t\t}\n\t\treturn this._tempCanvas;\n\t}\n\n\t_captureFrame() {\n\t\tconst video = this._getVideoElement();\n\t\tconst tempCanvas = this._getTempCanvasElement();\n\t\tconst context = tempCanvas.getContext(\"2d\")!;\n\n\t\tconst videoWidth = video.videoWidth;\n\t\tconst videoHeight = video.videoHeight;\n\t\tconst clientWidth = video.clientWidth;\n\t\tconst clientHeight = video.clientHeight;\n\n\t\tconst captureRegion = this._calculateCaptureRegion(clientWidth, clientHeight);\n\n\t\t// Calculate the ratio of videoSize to clientSize\n\t\tconst ratioX = videoWidth / clientWidth;\n\t\tconst ratioY = videoHeight / clientHeight;\n\t\tconst scale = Math.min(ratioX, ratioY);\n\n\t\t// Calculate the scaled capture region\n\t\tconst scaledXOffset = captureRegion.xOffset * scale;\n\t\tconst scaledYOffset = captureRegion.yOffset * scale;\n\t\tconst scaledScanWidth = captureRegion.scanWidth * scale;\n\t\tconst scaledScanHeight = captureRegion.scanHeight * scale;\n\n\t\t// Set canvas dimensions to match the capture region dimensions\n\t\ttempCanvas.width = captureRegion.scanWidth;\n\t\ttempCanvas.height = captureRegion.scanHeight;\n\n\t\t// Clear the canvas\n\t\tcontext.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n\n\t\t// Correct positioning if aspect ratios are different\n\t\tconst positionX = (videoWidth - clientWidth * scale) / 2;\n\t\tconst positionY = (videoHeight - clientHeight * scale) / 2;\n\n\t\t// Calculate final source position considering the video element's offset\n\t\tconst finalXOffset = scaledXOffset + positionX;\n\t\tconst finalYOffset = scaledYOffset + positionY;\n\n\t\t// Draw the portion of the video on the canvas\n\t\tcontext.drawImage(\n\t\t\tvideo,\n\t\t\tfinalXOffset, finalYOffset, scaledScanWidth, scaledScanHeight, // Source rectangle\n\t\t\t0, 0, tempCanvas.width, tempCanvas.height, // Destination rectangle\n\t\t);\n\n\t\treturn tempCanvas;\n\t}\n\n\t/**\n\t * HANDLERS\n\t */\n\n\tasync _processFrame() {\n\t\ttry {\n\t\t\tconst canvas = this._captureFrame();\n\t\t\tconst dataUrl = canvas.toDataURL();\n\t\t\tconst result = await this._codeReader.decodeFromImageUrl(dataUrl);\n\n\t\t\tthis._handleScanSuccess(result);\n\t\t} catch (error) {\n\t\t\tthis._handleScanError(error as Exception);\n\t\t}\n\t}\n\n\t_handleScanSuccess(result: Result) {\n\t\tthis.fireDecoratorEvent(\"scan-success\", {\n\t\t\ttext: result.getText(),\n\t\t\trawBytes: result.getRawBytes(),\n\t\t});\n\t}\n\n\t_handleScanError(error: Exception) {\n\t\tif (error instanceof NotFoundException) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fireDecoratorEvent(\"scan-error\", { message: error.message });\n\t}\n\n\t_handleVideoPlaying() {\n\t\tconst FRAME_PROCESSING_INTERVAL = 200; // 5 frames per second\n\n\t\tthis.loading = false;\n\t\tthis.isReadyToScan = true;\n\n\t\t// Wait for the next animation frame before drawing the capture region\n\t\trequestAnimationFrame(() => {\n\t\t\tthis._drawCaptureRegion();\n\t\t});\n\n\t\t// Ensure any existing interval is cleared before setting a new one\n\t\tif (this._scanInterval) {\n\t\t\tclearInterval(this._scanInterval);\n\t\t}\n\n\t\tthis._scanInterval = setInterval(() => {\n\t\t\tthis._processFrame();\n\t\t}, FRAME_PROCESSING_INTERVAL);\n\t}\n\n\t_handleDrawCaptureRegion() {\n\t\tthis._drawCaptureRegion();\n\t}\n\n\t_closeDialog() {\n\t\tthis._resetReader();\n\t\tthis.open = false;\n\t\tthis.fireDecoratorEvent(\"close\");\n\t}\n\n\t_resetReader() {\n\t\tconst video = this._getVideoElement();\n\t\tvideo.pause();\n\n\t\tif (video.srcObject) {\n\t\t\tconst stream = video.srcObject as MediaStream;\n\t\t\tconst tracks = stream.getTracks();\n\t\t\ttracks.forEach(track => track.stop());\n\t\t}\n\n\t\tvideo.srcObject = null;\n\t\tvideo.removeEventListener(\"loadeddata\", this._handleVideoPlayingBound);\n\n\t\tif (this._scanInterval) {\n\t\t\tclearInterval(this._scanInterval);\n\t\t\tthis._scanInterval = null;\n\t\t}\n\n\t\tif (this._codeReader) {\n\t\t\tthis._codeReader.reset();\n\t\t}\n\n\t\tconst overlay = this._getOverlayCanvasElement();\n\t\toverlay.style.display = \"none\";\n\n\t\t// Reset the ready state\n\t\tthis.isReadyToScan = false;\n\t}\n}\n\nBarcodeScannerDialog.define();\n\nexport default BarcodeScannerDialog;\nexport type {\n\tBarcodeScannerDialogScanErrorEventDetail,\n\tBarcodeScannerDialogScanSuccessEventDetail,\n};\n"]}