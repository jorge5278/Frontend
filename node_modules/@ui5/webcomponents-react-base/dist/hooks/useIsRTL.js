'use client';
import { attachDirectionChange, detachDirectionChange } from '@ui5/webcomponents-base/dist/locale/directionChange.js';
import { useRef, useState } from 'react';
import { useIsomorphicLayoutEffect } from '../hooks/index.js';
const useIsRTL = (elementRef) => {
    const [isRTL, setRTL] = useState(false); // initial value is always LTR (also for SSR)
    const isMounted = useRef(false);
    useIsomorphicLayoutEffect(() => {
        isMounted.current = true;
        setRTL(elementRef.current?.matches(':dir(rtl)') ?? false);
        const handleDirectionChange = () => {
            if (isMounted.current) {
                setRTL(elementRef.current?.matches(':dir(rtl)') ?? false);
            }
        };
        attachDirectionChange(handleDirectionChange);
        return () => {
            isMounted.current = false;
            detachDirectionChange(handleDirectionChange);
        };
    }, []);
    return isRTL;
};
export { useIsRTL };
